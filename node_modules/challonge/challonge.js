var request = require("request")

function listParticipants(tournament,callback){
		var url = "https://api.challonge.com/v1/tournaments/" + tournament.url + "/participants.json?api_key=" + module.exports.api_key + "";
		var options = {
		    url: url,
		    method: 'GET'
		}

		request(options, function(error, response, body) {
		    if (!error && response.statusCode == 200) {
		    	var participants = JSON.parse(body)
		    	callback(participants);
		    }
		})

	}

function getPlayerbyName(tournament,playername,callback){
			var api_key = module.exports.api_key
			listParticipants(tournament,function(participants){
			var players = participants
			var playerid;
			for (var i = players.length - 1; i >= 0; i--) {
				if(players[i].participant.name === playername){
					playerid = players[i].participant.id
				}
			}
				var url = "https://api.challonge.com/v1/tournaments/" + tournament.url + "/participants/" + playerid + ".json?api_key=" + api_key;
				var options = {
				    url: url,
				    method: 'GET'
				}
				request(options, function(error, response, body) {
					console.log(response.statusCode)
				    if (!error && response.statusCode == 200) {
				    	console.log("Success")
				    	var player = JSON.parse(body)
				    	callback(player)
				    }
				})		
			})
	}

function listMatches(tournament,callback){
		var url = "https://api.challonge.com/v1/tournaments/" + tournament.url + "/matches.json?api_key=" + module.exports.api_key + "";

		var options = {
		    url: url,
		    method: 'GET'
		}

		request(options, function(error, response, body) {
		    if (!error && response.statusCode == 200) {
		    	var matches = JSON.parse(body)
		    	callback(matches)
		    }
		})

	}

module.exports = {
	api_key: null,
	getMatchByPlayer: function (requestedTournament,playername,callback){
		this.getTournament(requestedTournament,function(tournament){	
			getPlayerbyName(tournament,playername,function(player){
				listMatches(tournament,function(matches){
					for (var i = matches.length - 1; i >= 0; i--) {
						if(matches[i].match.player1_id == player.participant.id || matches[i].match.player2_id == player.participant.id){
							callback(matches[i].match)
						}
					}
				})
			})
		})	
	},
	updateTournament: function (requestedTournament,change,changeValue,callback){
			var api_key = this.api_key
			this.getTournament(requestedTournament,function(tournament){
				var url = "https://challonge.com/api/tournaments/" + tournament.url + ".json?api_key=" + api_key + "";
				if(change == "name"){
					url += "&tournament[name]=" + changeValue;
				}
				if(change == "game"){
					url += "&tournament[game_name]=this." + changeValue;
				}
				if(change == "date"){
					var dateString = changeValue.split("-")
					var date = new Date(dateString[0],dateString[1],dateString[2],dateString[3],dateString[4])
					url += "&tournament[start_at]=" + date;
				}
				if(change == "limit"){
					if(changeValue == "free"){
						url += "&tournament[signup_cap]=null";
					}
					var participants = changeValue.split("-")
					if(participants[0].toLowerCase() == "limit"){
					url += "&tournament[signup_cap]=" + parseInt(participants[1]);	
					}
				}
				var options = {
				    url: url,
				    method: 'PUT'
				}

				request(options, function(error, response, body) {
					console.log(response.statusCode)
				    if (!error && response.statusCode == 200) {
				    	console.log("Success")
				    	callback()
				    }
				})	
		})
	},
	deleteTournament: function (requestedTournament,callback){
		var api_key = this.api_key
		this.getTournament(requestedTournament,function(tournament){
			var url = "https://challonge.com/api/tournaments/" + tournament.url + ".json?api_key=" + api_key + "";

			var options = {
			    url: url,
			    method: 'DELETE'
			}

			request(options, function(error, response, body) {
				console.log(response.statusCode)
			    if (!error && response.statusCode == 200) {
			    	console.log("Success")
			    	callback(tournament)
			    }
			})
		})
	},
	makeid: function (){
	    var text = "";
	    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

	    for( var i=0; i < 5; i++ ){
	        text += possible.charAt(Math.floor(Math.random() * possible.length));
	    }

	    return text;
	},
	getTournament: function (requestedTournament,callback){
		this.getTournaments(function(tournaments){
			var tournament;
			for (var i = tournaments.length - 1; i >= 0; i--) {
				if(tournaments[i].tournament.name == requestedTournament.replace("_"," ")){
					tournament = tournaments[i].tournament
				}
			}
			if(tournament != undefined){
			callback(tournament)
			}
		})
	},
	getTournaments: function (callback){
		var url = "https://api.challonge.com/v1/tournaments.json?api_key=" + this.api_key + "";
				var options = {
				    url: url,
				    method: 'GET'
				}

				request(options, function(error, response, body) {
					console.log(response.statusCode)
				    if (!error && response.statusCode == 200) {
				    	console.log("Success")
				    	var tournaments = JSON.parse(body)
				    	callback(tournaments)
				    }
				})		
	},
	getBracket: function (tournament,callback){
		var url = "http://challonge.com/" + tournament.url + "/module"
		callback(url)
	},
	getPlayerbyName: function (tournament,playername,callback){
			var api_key = this.api_key
			listParticipants(tournament,function(participants){
			var players = participants
			var playerid;
			for (var i = players.length - 1; i >= 0; i--) {
				if(players[i].participant.name === playername){
					playerid = players[i].participant.id
				}
			}
				var url = "https://api.challonge.com/v1/tournaments/" + tournament.url + "/participants/" + playerid + ".json?api_key=" + api_key;
				var options = {
				    url: url,
				    method: 'GET'
				}
				request(options, function(error, response, body) {
					console.log(response.statusCode)
				    if (!error && response.statusCode == 200) {
				    	console.log("Success")
				    	var player = JSON.parse(body)
				    	callback(player)
				    }
				})		
			})
	},
	getPlayerbyID: function (tournament,playerid,callback){
			var url = "https://api.challonge.com/v1/tournaments/" + tournament.url + "/participants/+" + playerid + ".json?api_key=" + this.api_key + "";
			var options = {
			    url: url,
			    method: 'GET'
			}

			request(options, function(error, response, body) {
				console.log(response.statusCode)
			    if (!error && response.statusCode == 200) {
			    	console.log("Success")
			    	var player = JSON.parse(body)
			    	callback(player)
			    }
			})	
	},
	getMatch: function (tournament,matchNum,callback){
			var api_key = this.api_key
			this.listMatches(tournament,function(matches){
			var match_id = null
			for (var i = matches.length - 1; i >= 0; i--) {
				if(parseInt(matches[i].match.suggested_play_order) == matchNum){
					match_id = matches[i].match.id
				}
			}

			var url = "https://api.challonge.com/v1/tournaments/" + tournament.url + "/matches/+" + match_id + ".json?api_key=" + api_key + "";
			var options = {
			    url: url,
			    method: 'GET'
			}

			request(options, function(error, response, body) {
				console.log(response.statusCode)
			    if (!error && response.statusCode == 200) {
			    	console.log("Success")
			    	var match = JSON.parse(body)
			    	callback(match.match)
			    }
			})	
		})
	},
	updateMatch: function (tournament,matchNum,matchResult,matchDone,callback){
			var api_key = this.api_key
			this.getMatch(tournament,matchNum,function(match){
			var url = "https://api.challonge.com/v1/tournaments/" + tournament.url + "/matches/" + match.id + ".json?api_key=" + api_key + "";
			url += "&match[scores_csv]=" + matchResult 
			if(matchDone == "true"){
				var score = matchResult.split("-");
				if(score[0] > score[1]){
					url += "&match[winner_id]=" + match.player1_id	
				} else {
					url += "&match[winner_id]=" + match.player2_id	
				}
			}

			var options = {
			    url: url,
			    method: 'PUT'
			}

			request(options, function(error, response, body) {
					console.log(response.statusCode)
				    if (!error && response.statusCode == 200) {
				    	console.log("Success")
				    	callback()
				    }
			})	
		})
	},
	listParticipants: function (tournament,callback){
		var api_key = this.api_key
		var url = "https://api.challonge.com/v1/tournaments/" + tournament.url + "/participants.json?api_key=" + api_key + "";
		var options = {
		    url: url,
		    method: 'GET'
		}

		request(options, function(error, response, body) {
		    if (!error && response.statusCode == 200) {
		    	var participants = JSON.parse(body)
		    	callback(participants);
		    }
		})

	},
	listMatches: function (tournament,callback){
		var url = "https://api.challonge.com/v1/tournaments/" + tournament.url + "/matches.json?api_key=" + this.api_key + "";

		var options = {
		    url: url,
		    method: 'GET'
		}

		request(options, function(error, response, body) {
		    if (!error && response.statusCode == 200) {
		    	var matches = JSON.parse(body)
		    	callback(matches)
		    }
		})

	},
	createTournament: function (name,gamename,time,cap,callback){
		var url = "https://challonge.com/api/tournaments.json?api_key=" + this.api_key + "";
		url += "&tournament[name]=" + name;
		url += "&tournament[open_signup]=false";
		url += "&tournament[url]=" + this.makeid();
		url += "&tournament[game_name]=" + gamename;
		var dateString = time.split("-")
		var date = new Date(dateString[0],dateString[1],dateString[2],dateString[3],dateString[4])
		url += "&tournament[start_at]=" + date;
		if(cap == "free"){
			url += "&tournament[signup_cap]=null";
		} else {
		var participants = cap.split("-")
			if(participants[0].toLowerCase() == "limit"){
			url += "&tournament[signup_cap]=" + parseInt(participants[1]);	
			}
		}
		var options = {
		    url: url,
		    method: 'POST'
		}

		request(options, function(error, response, body) {
			console.log(response.statusCode)
		    if (!error && response.statusCode == 200) {
		    	console.log("Success")
		    	var tournament = JSON.parse(body)
		    	callback(tournament.tournament)
		    }
		})

	},
	addPlayer: function (tournament,name,callback){
		// Configure the request
		var options = {
		    url: "https://challonge.com/api/tournaments/" + tournament.url +"/participants.json?api_key=" + this.api_key + "&participant[name]=" + name,
		    method: 'POST'
		}
		// Start the request
		request(options, function(error, response, body) {
			console.log(response.statusCode)
		    if (!error && response.statusCode == 200) {
		        console.log("Success")
		        callback()
		    }
		})
	},
	removePlayer: function (tournament,name,callback){
		// Configure the request
		var api_key = this.api_key
		this.getPlayerbyName(tournament,name,function(player){
			var url = "https://challonge.com/api/tournaments/" + tournament.url +"/participants/" + player.participant.id + ".json?api_key=" + api_key
			var options = {
			    url: url,
			    method: 'DELETE'
			}
			// Start the request
			request(options, function(error, response, body) {
				console.log(response.statusCode)
			    if (!error && response.statusCode == 200) {
			        console.log("Success")
			        callback()
			    }
			})
		})
	},
	startTournament: function (tournament,callback){
		// Configure the request
		var options = {
		    url: "https://challonge.com/api/tournaments/" + tournament.url +"/start.json?api_key=" + this.api_key + "",
		    method: 'POST'
		}
		// Start the request
		request(options, function(error, response, body) {
			console.log(response.statusCode)
		    if (!error && response.statusCode == 200) {
		        console.log("Success")
		        callback()
		    }
		})
	}
}